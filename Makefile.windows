
# Makefile.windows

# Compiler
CC = gcc -std=c99

# Directories
SRC_DIR = src
INC_DIR = include
OBJ_DIR = obj
BIN_DIR = bin
TEST_DIR = test
TEST_BIN_DIR = $(BIN_DIR)/test

# Base Flags
BASE_CFLAGS = -D_DEBUG -ggdb3 -I$(INC_DIR)
BASE_LDFLAGS =

# Windows-specific Flags
CFLAGS = $(BASE_CFLAGS)
LDFLAGS = $(BASE_LDFLAGS) -lleveldb

# Source Files
SRC_FILES := $(wildcard $(SRC_DIR)/*.c)
OBJ_FILES = $(patsubst $(SRC_DIR)/%.c,$(OBJ_DIR)/%.o,$(SRC_FILES))

# Test Files
TEST_FILES := $(wildcard $(TEST_DIR)/*.c)
TEST_BINARIES = $(patsubst $(TEST_DIR)/%.c,$(TEST_BIN_DIR)/%.exe,$(TEST_FILES))

# Executable Name
NAME = BlockParser.exe

# Default Target
all: $(BIN_DIR)/$(NAME)

# Rule to compile object files
$(OBJ_DIR)/%.o: $(SRC_DIR)/%.c
	@if not exist "$(OBJ_DIR)" mkdir "$(OBJ_DIR)"
	$(CC) $(CFLAGS) -c $< -o $@

# Rule to link the main binary
$(BIN_DIR)/$(NAME): $(OBJ_FILES)
	@if not exist "$(BIN_DIR)" mkdir "$(BIN_DIR)"
	$(CC) $^ -o $@ $(LDFLAGS)

# Rule to compile test binaries
$(TEST_BIN_DIR)/%.exe: $(TEST_DIR)/%.c
	@if not exist "$(TEST_BIN_DIR)" mkdir "$(TEST_BIN_DIR)"
	$(CC) $(CFLAGS) $< -o $@ $(LDFLAGS)

# Run all tests
run_tests: $(TEST_BINARIES)
	@for %%f in ($(TEST_BINARIES)) do (
		echo Running %%f...
		%%f
		echo.
	)

# Clean up
clean:
	@if exist "$(OBJ_DIR)" rmdir /S /Q "$(OBJ_DIR)"
	@if exist "$(BIN_DIR)" rmdir /S /Q "$(BIN_DIR)"

# Rebuild
re: clean all

.PHONY: all clean re run_tests
